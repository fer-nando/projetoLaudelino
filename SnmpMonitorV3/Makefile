#############################################################################
# Makefile for building: SnmpMonitorV3
# Generated by qmake (2.01a) (Qt 4.7.1) on: Wed Nov 16 09:55:37 2011
# Project:  SnmpMonitorV3.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile SnmpMonitorV3.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtSql -I/usr/include -I/usr/include/qwt -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lqwt -lQtSql -L/usr/lib64 -lQtGui -L/usr/X11R6/lib64 -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		device.cpp \
		interface.cpp \
		management.cpp \
		link.cpp \
		linkwindow.cpp \
		devicewindow.cpp \
		dbthread.cpp \
		graphwindow.cpp moc_mainwindow.cpp \
		moc_linkwindow.cpp \
		moc_devicewindow.cpp \
		moc_dbthread.cpp \
		moc_graphwindow.cpp
OBJECTS       = main.o \
		mainwindow.o \
		device.o \
		interface.o \
		management.o \
		link.o \
		linkwindow.o \
		devicewindow.o \
		dbthread.o \
		graphwindow.o \
		moc_mainwindow.o \
		moc_linkwindow.o \
		moc_devicewindow.o \
		moc_dbthread.o \
		moc_graphwindow.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		SnmpMonitorV3.pro
QMAKE_TARGET  = SnmpMonitorV3
DESTDIR       = 
TARGET        = SnmpMonitorV3

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_linkwindow.h ui_devicewindow.h ui_graphwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: SnmpMonitorV3.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtSql.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtGui.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile SnmpMonitorV3.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtSql.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtGui.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile SnmpMonitorV3.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/SnmpMonitorV31.0.0 || $(MKDIR) .tmp/SnmpMonitorV31.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/SnmpMonitorV31.0.0/ && $(COPY_FILE) --parents mainwindow.h device.h interface.h management.h link.h linkwindow.h devicewindow.h dbthread.h graphwindow.h .tmp/SnmpMonitorV31.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp device.cpp interface.cpp management.cpp link.cpp linkwindow.cpp devicewindow.cpp dbthread.cpp graphwindow.cpp .tmp/SnmpMonitorV31.0.0/ && $(COPY_FILE) --parents mainwindow.ui linkwindow.ui devicewindow.ui graphwindow.ui .tmp/SnmpMonitorV31.0.0/ && (cd `dirname .tmp/SnmpMonitorV31.0.0` && $(TAR) SnmpMonitorV31.0.0.tar SnmpMonitorV31.0.0 && $(COMPRESS) SnmpMonitorV31.0.0.tar) && $(MOVE) `dirname .tmp/SnmpMonitorV31.0.0`/SnmpMonitorV31.0.0.tar.gz . && $(DEL_FILE) -r .tmp/SnmpMonitorV31.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_linkwindow.cpp moc_devicewindow.cpp moc_dbthread.cpp moc_graphwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_linkwindow.cpp moc_devicewindow.cpp moc_dbthread.cpp moc_graphwindow.cpp
moc_mainwindow.cpp: devicewindow.h \
		device.h \
		interface.h \
		management.h \
		link.h \
		linkwindow.h \
		dbthread.h \
		graphwindow.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_linkwindow.cpp: management.h \
		device.h \
		interface.h \
		link.h \
		linkwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) linkwindow.h -o moc_linkwindow.cpp

moc_devicewindow.cpp: device.h \
		interface.h \
		management.h \
		link.h \
		devicewindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) devicewindow.h -o moc_devicewindow.cpp

moc_dbthread.cpp: management.h \
		device.h \
		interface.h \
		link.h \
		dbthread.h
	/usr/bin/moc $(DEFINES) $(INCPATH) dbthread.h -o moc_dbthread.cpp

moc_graphwindow.cpp: device.h \
		interface.h \
		management.h \
		link.h \
		graphwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) graphwindow.h -o moc_graphwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_linkwindow.h ui_devicewindow.h ui_graphwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_linkwindow.h ui_devicewindow.h ui_graphwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_linkwindow.h: linkwindow.ui
	/usr/bin/uic linkwindow.ui -o ui_linkwindow.h

ui_devicewindow.h: devicewindow.ui
	/usr/bin/uic devicewindow.ui -o ui_devicewindow.h

ui_graphwindow.h: graphwindow.ui
	/usr/bin/uic graphwindow.ui -o ui_graphwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		devicewindow.h \
		device.h \
		interface.h \
		management.h \
		link.h \
		linkwindow.h \
		dbthread.h \
		graphwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		devicewindow.h \
		device.h \
		interface.h \
		management.h \
		link.h \
		linkwindow.h \
		dbthread.h \
		graphwindow.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

device.o: device.cpp device.h \
		interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o device.o device.cpp

interface.o: interface.cpp interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interface.o interface.cpp

management.o: management.cpp management.h \
		device.h \
		interface.h \
		link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o management.o management.cpp

link.o: link.cpp link.h \
		interface.h \
		device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o link.o link.cpp

linkwindow.o: linkwindow.cpp linkwindow.h \
		management.h \
		device.h \
		interface.h \
		link.h \
		ui_linkwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linkwindow.o linkwindow.cpp

devicewindow.o: devicewindow.cpp devicewindow.h \
		device.h \
		interface.h \
		management.h \
		link.h \
		ui_devicewindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o devicewindow.o devicewindow.cpp

dbthread.o: dbthread.cpp dbthread.h \
		management.h \
		device.h \
		interface.h \
		link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbthread.o dbthread.cpp

graphwindow.o: graphwindow.cpp graphwindow.h \
		device.h \
		interface.h \
		management.h \
		link.h \
		ui_graphwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphwindow.o graphwindow.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_linkwindow.o: moc_linkwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_linkwindow.o moc_linkwindow.cpp

moc_devicewindow.o: moc_devicewindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_devicewindow.o moc_devicewindow.cpp

moc_dbthread.o: moc_dbthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dbthread.o moc_dbthread.cpp

moc_graphwindow.o: moc_graphwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_graphwindow.o moc_graphwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

